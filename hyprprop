#!/usr/bin/env sh

prop() {
    HYPR_TREE=$(hyprctl clients -j)

    echo $HYPR_TREE | jq -r ".[] | select(.workspace.id == "$(hyprctl activewindow -j | jq -r '.workspace.id')\)""| jq -r ".at,.size" | jq -s "add" | jq '_nwise(4)' | jq -r '"\(.[0]),\(.[1]) \(.[2])x\(.[3])"'| slurp -r > .slurp_out 2> .slurp_error &
    PID=$!
    wait $PID

    ERROR=$(cat .slurp_error) # invalid box format: null,null nullxnull
    rm .slurp_error
    [ -n "$ERROR" ] && prop

    SELECTION=$(cat .slurp_out)
    rm .slurp_out
    [ -z "$SELECTION" ] && cleanup && exit

    # Extract the X, Y, Width, and Height from the selection
    X=$(echo $SELECTION | awk -F'[, x]' '{print $1}')
    Y=$(echo $SELECTION | awk -F'[, x]' '{print $2}')
    W=$(echo $SELECTION | awk -F'[, x]' '{print $3}')
    H=$(echo $SELECTION | awk -F'[, x]' '{print $4}')

    WORKSPACE=$(hyprctl activewindow -j | jq -r '.workspace.id')

    # Find the window matching the selection
    echo $HYPR_TREE | jq -r --argjson x $X --argjson y $Y --argjson w $W --argjson h $H --argjson i $WORKSPACE \
            '.[] | select(.workspace.id == $i and .at[0] == $x and .at[1] == $y and .size[0] == $w and .size[1] == $h)'

    cleanup
    exit
}

cleanup() {
    hyprevents -f /usr/share/hyprprop/event_handler -k
}

event_handler() {
    pkill slurp
    wait $PID 2>/dev/null
    prop
}

terminate() {
    pkill slurp
    wait $PID 2>/dev/null
    cleanup
    exit
}

# Capture events on hyprland window/workspace change events
hyprevents -f /usr/share/hyprprop/event_handler 2>/dev/null &
trap event_handler USR1

trap terminate SIGINT
prop
