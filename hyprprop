#!/usr/bin/env sh

prop() {
    HYPR_TREE=$(hyprctl clients -j)

    OUT_FILE=/tmp/hyprprop.out
    ERROR_FILE=/tmp/hyprprop.error
    echo $HYPR_TREE | jq -r ".[] | select(.workspace.id == "$(hyprctl activewindow -j \
                                                              | jq -r '.workspace.id')\)"" \
                    | jq -r ".at,.size" | jq -s "add" | jq '_nwise(4)' \
                    | jq -r '"\(.[0]),\(.[1]) \(.[2])x\(.[3])"' \
                    | slurp -r > $OUT_FILE 2> $ERROR_FILE &
    PID=$!
    wait $PID

    ERROR=$(cat $ERROR_FILE)
    rm $ERROR_FILE

    SELECTION=$(cat $OUT_FILE)
    rm $OUT_FILE

    [ -n "$ERROR" ] && prop # invalid box format: null,null nullxnull
    [ -z "$SELECTION" ] && cleanup && exit

    X=$(echo $SELECTION | awk -F'[, x]' '{print $1}')
    Y=$(echo $SELECTION | awk -F'[, x]' '{print $2}')
    W=$(echo $SELECTION | awk -F'[, x]' '{print $3}')
    H=$(echo $SELECTION | awk -F'[, x]' '{print $4}')
    WORKSPACE=$(hyprctl activewindow -j | jq -r '.workspace.id')

    # Find the window matching the selection
    echo $HYPR_TREE | jq -r --argjson i $WORKSPACE \
                            --argjson x $X --argjson y $Y \
                            --argjson w $W --argjson h $H \
             '.[] | select(.workspace.id == $i and
                           .at[0] == $x and .at[1] == $y and
                           .size[0] == $w and .size[1] == $h)'

    cleanup
    exit
}

cleanup() {
    hyprevents -f /usr/share/hyprprop/event_handler -k
}

event_handler() {
    pkill slurp
    wait $PID 2>/dev/null
    prop
}

terminate() {
    pkill slurp
    wait $PID 2>/dev/null
    cleanup
    exit
}

# Capture events on hyprland window/workspace change events
hyprevents -f /usr/share/hyprprop/event_handler 2>/dev/null &
trap event_handler USR1

trap terminate SIGINT
prop
